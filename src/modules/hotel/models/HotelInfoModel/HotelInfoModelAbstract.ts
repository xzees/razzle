import _ from 'lodash';
import CheckinCheckoutTimesModelInterface from 'modules/hotel/models/CheckinCheckoutTimesModel/CheckinCheckoutTimesModelInterface';
import HotelFacilitiesModelInterface from 'modules/hotel/models/HotelFacilitiesModel/HotelFacilitiesModelInterface';
import HotelPhotoModelInterface from 'modules/hotel/models/HotelPhotoModel/HotelPhotoModelInterface';
import PopularPocilitiesModelInterface from 'modules/hotel/models/PopularPocilitiesModel/PopularPocilitiesModelInterface';
import LocationModel from 'modules/hotel/models/LocationModel';
import PaymentOptionsModelInterface from 'modules/hotel/models/PaymentOptionsModel/PaymentOptionsModelInterface';
import PaymentDetailsModelInterface from 'modules/hotel/models/PaymentDetailsModel/PaymentDetailsModelInterface';
import NearByLocationModelInterface from 'modules/hotel/models/NearByLocationModel/NearByLocationModelInterface';
import HotelPoliciesModelInterface from 'modules/hotel/models/HotelPoliciesModel/HotelPoliciesModelInterface';
import CheckinCheckoutTimesModel from '../CheckinCheckoutTimesModel';
import HotelFacilitiesModel from '../HotelFacilitiesModel';
import HotelPhotoModel from '../HotelPhotoModel';
import HotelPoliciesModel from '../HotelPoliciesModel';
import PopularPocilitiesModel from '../PopularPocilitiesModel';
import NearByLocationModel from '../NearByLocationModel';
import PaymentDetailsModel from '../PaymentDetailsModel';
import PaymentOptionsModel from '../PaymentOptionsModel';
import HotelInfoModelInterface from './HotelInfoModelInterface';

export default abstract class HotelInfoModelAbstract implements HotelInfoModelInterface {
    public address: string;
    public checkinCheckoutTimes: CheckinCheckoutTimesModelInterface;
    public city: string;
    public cityId: number;
    public class: number;
    public classIsEstimated: boolean;
    public country: string;
    public creditcardRequired: boolean;
    public currency: string;
    public defaultLanguage: string;
    public exactClass: number;
    public hotelDescription: string;
    public hotelFacilities: HotelFacilitiesModelInterface[];
    public hotelImportantInformation: string;
    public hotelPhotos: HotelPhotoModelInterface[]; 
    public hotelPolicies: HotelPoliciesModelInterface[];
    public hotelPopularPolicies: PopularPocilitiesModelInterface;
    public hotelTypeId: number;
    public isClosed: boolean;
    public location: LocationModel;
    public name: string;
    public nearByLocation: NearByLocationModelInterface;
    public paymentDetails: PaymentDetailsModelInterface[];
    public paymentOptions: PaymentOptionsModelInterface;
    public ranking: number;
    public spokenLanguages: string[];
    public themeIds: number[];
    public zip: string;

    constructor(json: any) {
        this.address = _.get(json, 'address');
        this.checkinCheckoutTimes = new CheckinCheckoutTimesModel(_.get(json, 'checkin_checkout_times'));
        this.city = _.get(json, 'city');
        this.cityId = _.get(json, 'city_id');
        this.class = _.get(json, 'class');
        this.classIsEstimated = _.get(json, 'class_is_estimated');
        this.country = _.get(json, 'country');
        this.creditcardRequired = _.get(json, 'creditcard_required');
        this.currency = _.get(json, 'currency');
        this.defaultLanguage = _.get(json, 'default_language');
        this.exactClass = _.get(json, 'exact_class');
        this.hotelDescription = _.get(json, 'hotel_description');
        this.hotelFacilities = (_.get(json, 'hotel_facilities') || []).map((v: any) => new HotelFacilitiesModel(v));
        this.hotelImportantInformation = _.get(json, 'hotel_important_information');
        this.hotelPhotos = (_.get(json, 'hotel_photos') || []).map((v: any) => new HotelPhotoModel(v));
        this.hotelPolicies = (_.get(json, 'hotel_policies') || []).map((v: any) => new HotelPoliciesModel(v));
        this.hotelPopularPolicies = new PopularPocilitiesModel(_.get(json, 'hotel_popular_policies'));
        this.hotelTypeId = _.get(json, 'hotel_type_id');
        this.isClosed = _.get(json, 'is_closed');
        this.location = _.get(json, 'location');
        this.name = _.get(json, 'name');
        this.nearByLocation = new NearByLocationModel(_.get(json, 'nearBy_location'));
        this.paymentDetails = (_.get(json, 'payment_details') || []).map((v: any) => new PaymentDetailsModel(v));
        this.paymentOptions = new PaymentOptionsModel(_.get(json, 'payment_options'));
        this.ranking = _.get(json, 'ranking');
        this.spokenLanguages = _.get(json, 'spoken_languages');
        this.themeIds = _.get(json, 'theme_ids');
        this.zip = _.get(json, 'zip');
    }
}